{
  "source_file_path_relative_to_docusaurus_root": "articles/useSyncExternalStore-the-underrated-react-api/index.mdx",
  "source_file_content_hash": "d837303b04cde37a19a845d82af4186f11a8e3903e147c38fe77df1f4309161d",
  "segments": [
    {
      "segment_id": "58cfcc64",
      "source_content": "---\nslug: useSyncExternalStore-the-underrated-react-api\ntitle: useSyncExternalStore - The underrated React API\nauthors: [slorber]\ndate: 2022-09-06\ntwitterThreadUrl: \"https://slo.im/t/articles/useSyncExternalStore\"\nimage: ./social-card.png\n---",
      "source_content_hash": "463e0b51872f1a5e3cc3474aefb0ec95b0298e06b01ad8226158676e1111d236",
      "node_type": "yaml",
      "translatable": false,
      "translations": {
        "fr": "@@untranslatable_placeholder_58cfcc64",
        "en": "@@untranslatable_placeholder_58cfcc64",
        "zh-hans": "@@untranslatable_placeholder_58cfcc64"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "1cc03ec8",
      "source_content": "# useSyncExternalStore - The underrated React API",
      "source_content_hash": "a5dce1687748f70717491a0c8546283cfaf4e1eef3ad7bd5c0a650be567db168",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "fr": "# useSyncExternalStore - L'API React sous-estimée",
        "en": "# useSyncExternalStore - L'API React sous-estimée",
        "zh-hans": "# useSyncExternalStore - 被低估的React API"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "8d66f911",
      "source_content": "You might have heard of [`useSyncExternalStore()`](https://reactjs.org/docs/hooks-reference.html#usesyncexternalstore), a new React 18 hook to **subscribe to external data sources**. It is often used internally by state management libraries - like [Redux](https://github.com/reduxjs/react-redux/pull/1808) - to implement a **selector system**.",
      "source_content_hash": "6dfb16c5d4df1e98625b528be600fd0ddea64f218dd284018831ea052ec868f4",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "fr": "Vous avez peut-être entendu parler de [`useSyncExternalStore()`](https://reactjs.org/docs/hooks-reference.html#usesyncexternalstore), un nouveau hook de React 18 pour **souscrire à des sources de données externes**. Il est souvent utilisé en interne par des bibliothèques de gestion d'état - comme [Redux](https://github.com/reduxjs/react-redux/pull/1808) - pour implémenter un **système de sélecteur**.",
        "en": "Vous avez peut-être entendu parler de [`useSyncExternalStore()`](https://reactjs.org/docs/hooks-reference.html#usesyncexternalstore), un nouveau hook React 18 pour **souscrire à des sources de données externes**. Il est souvent utilisé en interne par des bibliothèques de gestion d'état - comme [Redux](https://github.com/reduxjs/react-redux/pull/1808) - pour implémenter un **système de sélecteurs**.",
        "zh-hans": "你可能听说过 [`useSyncExternalStore()`](https://reactjs.org/docs/hooks-reference.html#usesyncexternalstore)，这是React 18中用于**订阅外部数据源**的新钩子。它常被状态管理库（如[Redux](https://github.com/reduxjs/react-redux/pull/1808)）内部使用，用于实现**选择器系统**。"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "ad8fd492",
      "source_content": "But what about using `useSyncExternalStore()` in your own application code?",
      "source_content_hash": "c9027d984edb43182ebed38711b5707efe426f4ebcffc1cc3b5baacd8b777e47",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "fr": "Mais qu'en est-il d'utiliser `useSyncExternalStore()` dans votre propre code d'application ?",
        "en": "Mais qu'en est-il de l'utilisation de `useSyncExternalStore()` dans votre propre code d'application ?",
        "zh-hans": "但在你自己的应用代码中使用`useSyncExternalStore()`会怎样呢？"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "86b54d44",
      "source_content": "In this interactive article, I want to present you a problem: **over-returning React hooks triggering useless re-renders**. We will see how `useSyncExternalStore()` can be a good fix.",
      "source_content_hash": "0ecd869284da3cedc52e650276d0dbdf3809ccc73c7e99fc1388aa7252263aef",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "fr": "Dans cet article interactif, je souhaite vous présenter un problème : **les hooks React qui retournent trop de données déclenchent des re-rendus inutiles**. Nous verrons comment `useSyncExternalStore()` peut être une bonne solution.",
        "en": "Dans cet article interactif, je souhaite vous présenter un problème : **les hooks React qui renvoient trop de données déclenchent des re-rendus inutiles**. Nous verrons comment `useSyncExternalStore()` peut constituer une bonne solution.",
        "zh-hans": "在这篇交互式文章中，我想提出一个问题：**过度返回的React钩子会触发无用的重新渲染**。我们将看到`useSyncExternalStore()`如何成为有效的解决方案。"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "39b3772c",
      "source_content": "![social card](./social-card.png)",
      "source_content_hash": "ecaa1722784290579cd46f92c22c424f707d55b6dacecdbd0c594d8ca5d374b4",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "fr": "![social card](./social-card.png)",
        "en": "![carte sociale](./social-card.png)",
        "zh-hans": "![社交卡片](./social-card.png)"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "c6da205d",
      "source_content": "<!-- truncate -->",
      "source_content_hash": "2f8566552e3b92233817e9029faa608a0a7bde771612eb57367d8dad692fdcb4",
      "node_type": "comment",
      "translatable": false,
      "translations": {
        "fr": "@@untranslatable_placeholder_c6da205d",
        "en": "@@untranslatable_placeholder_c6da205d",
        "zh-hans": "@@untranslatable_placeholder_c6da205d"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "5dfba1c3",
      "source_content": "<SubscribeFormEmbed />",
      "source_content_hash": "2b5c5e42f4352c90b9647a9da7a0fb7ece8b8dc27440e42cdf85cbb6e1901b85",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "fr": "@@untranslatable_placeholder_5dfba1c3",
        "en": "@@untranslatable_placeholder_5dfba1c3",
        "zh-hans": "@@untranslatable_placeholder_5dfba1c3"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "0adfe0aa",
      "source_content": "import {\n  App,\n  AppFixed,\n  ScrollApp,\n} from \"@site/articles/useSyncExternalStore-the-underrated-react-api/demos\";",
      "source_content_hash": "3c91cedb564c8960af28b0ddbdcdc983c8fd75bfeb3d8c3d93827f54b99c82f1",
      "node_type": "mdxjsEsm",
      "translatable": false,
      "translations": {
        "fr": "@@untranslatable_placeholder_0adfe0aa",
        "en": "@@untranslatable_placeholder_0adfe0aa",
        "zh-hans": "@@untranslatable_placeholder_0adfe0aa"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "d06306f7",
      "source_content": "## Over-returning hooks",
      "source_content_hash": "ff7e4baf3d89595f00f50d75a8de1f3c357caecf5dca92ad12e68f16e92d287f",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "fr": "## Les hooks qui retournent trop de données",
        "en": "## Les hooks qui renvoient trop de données",
        "zh-hans": "## 过度返回的钩子"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "73ab96a3",
      "source_content": "Let's illustrate the problem with [`useLocation()`](https://reactrouter.com/en/main/hooks/use-location) from React-Router.",
      "source_content_hash": "081f55901fe067af42824bc0d621da75bf7c93e50a0ff311b16a38afc2d61441",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "fr": "Illustrons le problème avec [`useLocation()`](https://reactrouter.com/en/main/hooks/use-location) de React-Router.",
        "en": "Illustrons le problème avec [`useLocation()`](https://reactrouter.com/en/main/hooks/use-location) de React-Router.",
        "zh-hans": "让我们通过React-Router的[`useLocation()`](https://reactrouter.com/en/main/hooks/use-location)钩子来说明这个问题。"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "7499a4e7",
      "source_content": "This hook returns an object with many attributes (`pathname`, `hash`, `search`...), but you might not read all of them. Just calling the hook will trigger re-renders when any of these attributes is updated.",
      "source_content_hash": "98982ce1cf35f5fdd27a8076041d32c80cc73aee2181f01bf4199da3a95b0798",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "fr": "Ce hook retourne un objet avec de nombreux attributs (`pathname`, `hash`, `search`...), mais vous pourriez ne pas tous les utiliser. Le simple fait d'appeler le hook déclenchera des re-rendus lorsque l'un de ces attributs est mis à jour.",
        "en": "Ce hook renvoie un objet avec de nombreux attributs (`pathname`, `hash`, `search`...), mais vous pourriez ne pas tous les utiliser. Le simple fait d'appeler le hook déclenchera des re-rendus lorsque l'un de ces attributs est mis à jour.",
        "zh-hans": "该钩子返回包含多个属性（`pathname`、`hash`、`search`等）的对象，但你可能不会用到所有属性。仅仅调用钩子就会在任一属性更新时触发重新渲染。"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "517051a7",
      "source_content": "Let's consider this app:",
      "source_content_hash": "03e7684b96fcdc3a5be6239120a717998a33a0fa9aef1e2dbac14b5510178f74",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "fr": "Considérons cette application :",
        "en": "Considérons cette application :",
        "zh-hans": "考虑以下应用："
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "4dd51304",
      "source_content": "```tsx\nfunction CurrentPathname() {\n  const { pathname } = useLocation();\n  return <div>{pathname}</div>;\n}\n\nfunction CurrentHash() {\n  const { hash } = useLocation();\n  return <div>{hash}</div>;\n}\n\nfunction Links() {\n  return (\n    <div>\n      <Link to=\"#link1\">#link1</Link>\n      <Link to=\"#link2\">#link2</Link>\n      <Link to=\"#link3\">#link3</Link>\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <div>\n      <CurrentPathname />\n      <CurrentHash />\n      <Links />\n    </div>\n  );\n}\n```",
      "source_content_hash": "68154e04385021e320c4366a29b2a63fe3fdfca2c8d2869ff9aa3e50fc837d5b",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "fr": "@@untranslatable_placeholder_4dd51304",
        "en": "@@untranslatable_placeholder_4dd51304",
        "zh-hans": "@@untranslatable_placeholder_4dd51304"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "61a24b68",
      "source_content": "<App />",
      "source_content_hash": "020525fda7385f0f59c01976613d6828f508370400f3d4eb58b2aa56b1cf4fd0",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "fr": "@@untranslatable_placeholder_61a24b68",
        "en": "@@untranslatable_placeholder_61a24b68",
        "zh-hans": "@@untranslatable_placeholder_61a24b68"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "147e8550",
      "source_content": "On any hash link click, the `CurrentPathname` component will re-render, even if it's not even using the `hash` attribute 😅.",
      "source_content_hash": "7619fee1f11b97c47972777ab65a4a716a1a837a03f3eef068629e2c3141b43f",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "fr": "À chaque clic sur un lien de hachage, le composant `CurrentPathname` se re-rendra, même s'il n'utilise même pas l'attribut `hash` 😅.",
        "en": "À chaque clic sur un lien avec hash, le composant `CurrentPathname` se re-rendra, même s'il n'utilise pas l'attribut `hash` 😅.",
        "zh-hans": "点击任何哈希链接时，`CurrentPathname`组件都会重新渲染——即使它根本没有使用`hash`属性 😅。"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "07837485",
      "source_content": ":::tip\n\nWhenever a hook returns data that you don't display, think about React re-renders. If you don't pay attention, a tiny `useLocation()` call added at the top of a React tree could harm your app's performance.\n\n:::",
      "source_content_hash": "33f6fa403e79ef3e5502ba8b4af605182fe6c08646b3dcb0baca0a6a8e7bb4a7",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "fr": ":::tip\n\nChaque fois qu'un hook retourne des données que vous n'affichez pas, pensez aux re-rendus React. Si vous n'y prêtez pas attention, un simple appel à `useLocation()` ajouté en haut d'un arbre React pourrait nuire aux performances de votre application.\n\n:::",
        "en": ":::tip\n\nLorsqu'un hook renvoie des données que vous n'affichez pas, pensez aux re-rendus React. Si vous n'y prêtez pas attention, un simple appel à `useLocation()` ajouté en haut d'un arbre React pourrait nuire aux performances de votre application.\n\n:::",
        "zh-hans": ":::tip\n\n当某个钩子返回了你未使用的数据时，请思考React的重新渲染机制。稍不注意，在React树顶部添加一个微小的`useLocation()`调用就可能损害应用性能。\n\n:::"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "f5db8e60",
      "source_content": ":::info\n\nThe goal is not to criticize React-Router, but rather to illustrate the problem. `useLocation()` is just a good pragmatic candidate to create this interactive article. Your own React hooks and other third-party libraries might also over-return.\n\n:::",
      "source_content_hash": "d84feaa6ef7d17ddf2ff32c27022841748db9b5095b56c4792d8b843b00bd490",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "fr": ":::info\n\nL'objectif n'est pas de critiquer React-Router, mais plutôt d'illustrer le problème. `useLocation()` est simplement un bon candidat pragmatique pour créer cet article interactif. Vos propres hooks React et d'autres bibliothèques tierces pourraient également retourner trop de données.\n\n:::",
        "en": ":::info\n\nL'objectif n'est pas de critiquer React-Router, mais plutôt d'illustrer le problème. `useLocation()` est simplement un bon candidat pragmatique pour créer cet article interactif. Vos propres hooks React et d'autres bibliothèques tierces pourraient également renvoyer trop de données.\n\n:::",
        "zh-hans": ":::info\n\n本文目的并非批评React-Router，而是阐明问题本质。`useLocation()`只是创建这篇交互式文章的实用案例。你自己的React钩子或其他第三方库同样可能存在过度返回问题。\n\n:::"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "1c598ecd",
      "source_content": "## `useSyncExternalStore` to the rescue?",
      "source_content_hash": "400cf51319f48185cb1654c635f0786bb996bfbd4da99014c4dcfab57672e69b",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "fr": "## `useSyncExternalStore` à la rescousse ?",
        "en": "## `useSyncExternalStore` à la rescousse ?",
        "zh-hans": "## `useSyncExternalStore`来救援？"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "2547a6bb",
      "source_content": "The [official documentation](https://reactjs.org/docs/hooks-reference.html#usesyncexternalstore) says:",
      "source_content_hash": "ffe360c34f7eaf872a0882b603075229fb5eb7525f52020e2ad92a93c8a08dae",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "fr": "La [documentation officielle](https://reactjs.org/docs/hooks-reference.html#usesyncexternalstore) dit :",
        "en": "La [documentation officielle](https://reactjs.org/docs/hooks-reference.html#usesyncexternalstore) indique :",
        "zh-hans": "[官方文档](https://reactjs.org/docs/hooks-reference.html#usesyncexternalstore)说明："
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "30d027a1",
      "source_content": "> useSyncExternalStore is a hook recommended for reading and subscribing from external data sources in a way that’s compatible with concurrent rendering features like selective hydration and time slicing.\n> This method returns the value of the store and accepts three arguments:\n>\n> - `subscribe`: function to register a callback that is called whenever the store changes.\n> - `getSnapshot`: function that returns the current value of the store.\n> - `getServerSnapshot`: function that returns the snapshot used during server rendering.",
      "source_content_hash": "e1ed91fe55b63b3658af2c6d4c3129de8e917e3b1fb9ccf7471c8edbcf9e7c7b",
      "node_type": "blockquote",
      "translatable": true,
      "translations": {
        "fr": "> useSyncExternalStore est un hook recommandé pour lire et souscrire à des sources de données externes d'une manière compatible avec les fonctionnalités de rendu concurrent comme l'hydratation sélective et le découpage en tranches de temps.\n> Cette méthode retourne la valeur du store et accepte trois arguments :\n>\n> - `subscribe` : fonction pour enregistrer un callback qui est appelé à chaque fois que le store change.\n> - `getSnapshot` : fonction qui retourne la valeur actuelle du store.\n> - `getServerSnapshot` : fonction qui retourne l'instantané utilisé lors du rendu serveur.",
        "en": "> useSyncExternalStore est un hook recommandé pour lire et souscrire à des sources de données externes d'une manière compatible avec les fonctionnalités de rendu concurrent comme l'hydratation sélective et le découpage temporel.\n> Cette méthode renvoie la valeur du store et accepte trois arguments :\n>\n> - `subscribe` : fonction pour enregistrer un callback qui est appelé chaque fois que le store change.\n> - `getSnapshot` : fonction qui renvoie la valeur actuelle du store.\n> - `getServerSnapshot` : fonction qui renvoie l'instantané utilisé pendant le rendu serveur.",
        "zh-hans": "> useSyncExternalStore是一个推荐用于读取和订阅外部数据源的钩子，其实现方式兼容选择性注水和时间切片等并发渲染特性。\n> 该方法返回存储的值并接受三个参数：\n>\n> - `subscribe`：注册回调的函数，在存储变更时被调用\n> - `getSnapshot`：返回存储当前值的函数\n> - `getServerSnapshot`：返回服务端渲染所用快照的函数"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "ec99e704",
      "source_content": "```tsx\nfunction useSyncExternalStore<Snapshot>(\n  subscribe: (onStoreChange: () => void) => () => void,\n  getSnapshot: () => Snapshot,\n  getServerSnapshot?: () => Snapshot,\n): Snapshot;\n```",
      "source_content_hash": "37049ffb849ff33cab894cfeba415b68d66bfdeece444d5596cece028b53532b",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "fr": "@@untranslatable_placeholder_ec99e704",
        "en": "@@untranslatable_placeholder_ec99e704",
        "zh-hans": "@@untranslatable_placeholder_ec99e704"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "2838eb68",
      "source_content": "This feels a bit abstract. This [beta doc page](https://beta.reactjs.org/learn/you-might-not-need-an-effect#subscribing-to-an-external-store) gives a good example:",
      "source_content_hash": "ca7536d7acd70832a20fcb4ee80bc28d5d800cb6f7e21083126da9b18926ed8f",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "fr": "Cela semble un peu abstrait. Cette [page de documentation bêta](https://beta.reactjs.org/learn/you-might-not-need-an-effect#subscribing-to-an-external-store) donne un bon exemple :",
        "en": "Cela semble un peu abstrait. Cette [page de documentation bêta](https://beta.reactjs.org/learn/you-might-not-need-an-effect#subscribing-to-an-external-store) donne un bon exemple :",
        "zh-hans": "这听起来有些抽象。这份[beta版文档](https://beta.reactjs.org/learn/you-might-not-need-an-effect#subscribing-to-an-external-store)提供了很好的示例："
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "de26f08a",
      "source_content": "```tsx\nfunction subscribe(callback) {\n  window.addEventListener(\"online\", callback);\n  window.addEventListener(\"offline\", callback);\n  return () => {\n    window.removeEventListener(\"online\", callback);\n    window.removeEventListener(\"offline\", callback);\n  };\n}\n\nfunction useOnlineStatus() {\n  return useSyncExternalStore(\n    subscribe,\n    () => navigator.onLine,\n    () => true,\n  );\n}\n\nfunction ChatIndicator() {\n  const isOnline = useOnlineStatus();\n  // ...\n}\n```",
      "source_content_hash": "9dbd0e80ea7b7d17e5c3341cf8de124068bd2080dd2c15c3e18b8602bee18bd4",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "fr": "@@untranslatable_placeholder_de26f08a",
        "en": "@@untranslatable_placeholder_de26f08a",
        "zh-hans": "@@untranslatable_placeholder_de26f08a"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "53aa2b95",
      "source_content": "It turns out that the browser history can also be considered as an external data source. Let's see how to use `useSyncExternalStore` with React-Router!",
      "source_content_hash": "ddb9900449da77cfb3672b7d96771bd9370737c14d5971b33dfc22e94cac2c5a",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "fr": "Il s'avère que l'historique du navigateur peut également être considéré comme une source de données externe. Voyons comment utiliser `useSyncExternalStore` avec React-Router !",
        "en": "Il s'avère que l'historique du navigateur peut également être considéré comme une source de données externe. Voyons comment utiliser `useSyncExternalStore` avec React-Router !",
        "zh-hans": "事实上，浏览器历史记录也可视为外部数据源。让我们看看如何将`useSyncExternalStore`与React-Router结合使用！"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "c766290e",
      "source_content": "## Implementing `useHistorySelector()`",
      "source_content_hash": "eafdc1d47619b50cf44fa76487aa0162ba785ed2de67d9a40997219f0d38d03b",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "fr": "## Implémentation de `useHistorySelector()`",
        "en": "## Implémentation de `useHistorySelector()`",
        "zh-hans": "## 实现`useHistorySelector()`"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "5c7d994c",
      "source_content": "React-Router expose everything we need to wire `useSyncExternalStore`:",
      "source_content_hash": "05a88ff7a73ab9d40d3f883378482fa054421fab9e33d9a92f62f3e7249483ba",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "fr": "React-Router expose tout ce dont nous avons besoin pour connecter `useSyncExternalStore` :",
        "en": "React-Router expose tout ce dont nous avons besoin pour connecter `useSyncExternalStore` :",
        "zh-hans": "React-Router提供了我们连接`useSyncExternalStore`所需的所有接口："
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "ecba4df2",
      "source_content": "- access the browser history with [`useHistory()`](https://v5.reactrouter.com/web/api/Hooks/usehistory)\n- subscribe for history updates with [`history.listen(callback)`](https://github.com/remix-run/history/blob/main/docs/api-reference.md#history.listen)\n- access a snapshot of the current location with [`history.location`](https://github.com/remix-run/history/blob/main/docs/api-reference.md#historylocation)",
      "source_content_hash": "3a69a5ea3aebb685d9674077043b8bdec06c90168706599b832b5bfc7da72cec",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "fr": "- accéder à l'historique du navigateur avec [`useHistory()`](https://v5.reactrouter.com/web/api/Hooks/usehistory)\n- souscrire aux mises à jour de l'historique avec [`history.listen(callback)`](https://github.com/remix-run/history/blob/main/docs/api-reference.md#history.listen)\n- accéder à un instantané de l'emplacement actuel avec [`history.location`](https://github.com/remix-run/history/blob/main/docs/api-reference.md#historylocation)",
        "en": "- accéder à l'historique du navigateur avec [`useHistory()`](https://v5.reactrouter.com/web/api/Hooks/usehistory)\n- souscrire aux mises à jour de l'historique avec [`history.listen(callback)`](https://github.com/remix-run/history/blob/main/docs/api-reference.md#history.listen)\n- accéder à un instantané de l'emplacement actuel avec [`history.location`](https://github.com/remix-run/history/blob/main/docs/api-reference.md#historylocation)",
        "zh-hans": "- 通过[`useHistory()`](https://v5.reactrouter.com/web/api/Hooks/usehistory)访问浏览器历史记录\n- 通过[`history.listen(callback)`](https://github.com/remix-run/history/blob/main/docs/api-reference.md#history.listen)订阅历史记录更新\n- 通过[`history.location`](https://github.com/remix-run/history/blob/main/docs/api-reference.md#historylocation)访问当前位置的快照"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "51186659",
      "source_content": ":::caution\n\nThis website uses React-Router v5: the solution will be different for React-Router v6 ([see](https://twitter.com/Zh0uzi/status/1567523679604539405)).\n\n:::",
      "source_content_hash": "e165920d307b90a239c9a7cbe0a54abef4ab3ecfaf0d31a9863c9241712ee04a",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "fr": ":::caution\n\nCe site utilise React-Router v5 : la solution sera différente pour React-Router v6 ([voir](https://twitter.com/Zh0uzi/status/1567523679604539405)).\n\n:::",
        "en": ":::caution\n\nCe site utilise React-Router v5 : la solution sera différente pour React-Router v6 ([voir](https://twitter.com/Zh0uzi/status/1567523679604539405)).\n\n:::",
        "zh-hans": ":::caution\n\n本网站使用 React-Router v5：此解决方案不适用于 React-Router v6（[参见](https://twitter.com/Zh0uzi/status/1567523679604539405)）。\n\n:::"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "681ef526",
      "source_content": "The implementation of `useHistorySelector()` relatively simple:",
      "source_content_hash": "b35e0181ebd2bfc4c81f65c23a0f9d0f7f3463efbe7a7e26d901e55885c44146",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "fr": "L'implémentation de `useHistorySelector()` est relativement simple :",
        "en": "L'implémentation de `useHistorySelector()` est relativement simple :",
        "zh-hans": "`useHistorySelector()` 的实现相对简单："
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "eb25bb8c",
      "source_content": "```tsx\nfunction useHistorySelector(selector) {\n  const history = useHistory();\n  return useSyncExternalStore(history.listen, () =>\n    selector(history),\n  );\n}\n```",
      "source_content_hash": "4148e4d5489e39f6a64e209787c2e0056a9c8017ca8cea0497fe8f570dc88715",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "fr": "@@untranslatable_placeholder_eb25bb8c",
        "en": "@@untranslatable_placeholder_eb25bb8c",
        "zh-hans": "@@untranslatable_placeholder_eb25bb8c"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "44285072",
      "source_content": "Let's use it in our app:",
      "source_content_hash": "c5c2687980ae5832f77ef92f44860c31bcbc3f293e6aa0197c09ef526f9e4c84",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "fr": "Utilisons-la dans notre application :",
        "en": "Utilisons-la dans notre application :",
        "zh-hans": "让我们在应用中调用它："
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "5680b15c",
      "source_content": "```tsx\nfunction CurrentPathname() {\n  const pathname = useHistorySelector(\n    (history) => history.location.pathname,\n  );\n  return <div>{pathname}</div>;\n}\n\nfunction CurrentHash() {\n  const hash = useHistorySelector(\n    (history) => history.location.hash,\n  );\n  return <div>{hash}</div>;\n}\n```",
      "source_content_hash": "8634c51e60804ee12e2db7021ea554920b0c5828f7c8517b94fc42126e367a79",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "fr": "@@untranslatable_placeholder_5680b15c",
        "en": "@@untranslatable_placeholder_5680b15c",
        "zh-hans": "@@untranslatable_placeholder_5680b15c"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "b905852a",
      "source_content": "<AppFixed />",
      "source_content_hash": "b52353ceb24bec063e10ce1dc5ecc46db4114eab4ab9dbca5589fef80f4b5f5b",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "fr": "@@untranslatable_placeholder_b905852a",
        "en": "@@untranslatable_placeholder_b905852a",
        "zh-hans": "@@untranslatable_placeholder_b905852a"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "dc72fd20",
      "source_content": "Now, when you click on a hash link above, the `CurrentPathname` component will **not re-render** anymore!",
      "source_content_hash": "52c5a811f7ee0105a3589cea54499ad70d2e14d33667189d4602b7a7b9675fed",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "fr": "Désormais, lorsque vous cliquez sur un lien de hachage ci-dessus, le composant `CurrentPathname` **ne se réaffichera plus** !",
        "en": "Maintenant, lorsque vous cliquez sur un lien de hachage ci-dessus, le composant `CurrentPathname` **ne se réaffichera plus** !",
        "zh-hans": "现在，当您点击上方哈希链接时，`CurrentPathname` 组件将**不再重新渲染**！"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "445c72bd",
      "source_content": "## Another example: `scrollY`",
      "source_content_hash": "7e9f3116e38ee27a6f6289a62d11a3a77c61b0c69e09a7dbdc270ba88582512b",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "fr": "## Autre exemple : `scrollY`",
        "en": "## Autre exemple : `scrollY`",
        "zh-hans": "## 另一个示例：`scrollY`"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "9ef42155",
      "source_content": "There are so many external data sources that we can subscribe to, and implementing your own selector system on top might enable you to optimize React re-renders.",
      "source_content_hash": "f1e322ed225b706cfd909fd503f4859510dac8fd323b9987c3d60068ad1420bc",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "fr": "Il existe tant de sources de données externes auxquelles s'abonner, et implémenter votre propre système de sélecteurs par-dessus pourrait vous permettre d'optimiser les réaffichages React.",
        "en": "Il existe tellement de sources de données externes auxquelles nous pouvons nous abonner, et implémenter votre propre système de sélecteur peut vous permettre d'optimiser les réaffichages React.",
        "zh-hans": "我们可以订阅的外部数据源非常丰富，在其基础上实现自己的选择器系统能有效优化 React 的重新渲染。"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "fe25bd72",
      "source_content": "For example, let's consider we want to use the `scrollY` position of a page. We can implement this custom React hook:",
      "source_content_hash": "b6da6b19ff461c56fac08e138cdc6f75b410b530fc56e8645ce036bc9fcd25be",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "fr": "Par exemple, supposons que nous voulions utiliser la position `scrollY` d'une page. Nous pouvons implémenter ce hook React personnalisé :",
        "en": "Par exemple, supposons que nous voulions utiliser la position `scrollY` d'une page. Nous pouvons implémenter ce hook React personnalisé :",
        "zh-hans": "例如，假设我们需要获取页面的 `scrollY` 滚动位置。可以实现如下自定义 React Hook："
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "65ba7468",
      "source_content": "```tsx\n// A memoized constant fn prevents unsubscribe/resubscribe\n// In practice it is not a big deal\nfunction subscribe(onStoreChange) {\n  global.window?.addEventListener(\"scroll\", onStoreChange);\n  return () =>\n    global.window?.removeEventListener(\n      \"scroll\",\n      onStoreChange,\n    );\n}\n\nfunction useScrollY(selector = (id) => id) {\n  return useSyncExternalStore(\n    subscribe,\n    () => selector(global.window?.scrollY),\n    () => undefined,\n  );\n}\n```",
      "source_content_hash": "3134d48752dbf7c9e77d0265a5ad9145df658c032aeda0d6c8257804603f28db",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "fr": "@@untranslatable_placeholder_65ba7468",
        "en": "@@untranslatable_placeholder_65ba7468",
        "zh-hans": "@@untranslatable_placeholder_65ba7468"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "e6ac016e",
      "source_content": "We can now use this hook with an optional selector:",
      "source_content_hash": "5fe7994bac2ddf6c3169f35371c74ed5c013ea4d6a5f4689b259fc0b0c38717a",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "fr": "Nous pouvons désormais utiliser ce hook avec un sélecteur optionnel :",
        "en": "Nous pouvons maintenant utiliser ce hook avec un sélecteur optionnel :",
        "zh-hans": "现在即可通过可选选择器调用该 Hook："
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "5b2e44c7",
      "source_content": "```tsx\nfunction ScrollY() {\n  const scrollY = useScrollY();\n  return <div>{scrollY}</div>;\n}\n\nfunction ScrollYFloored() {\n  const to = 100;\n  const scrollYFloored = useScrollY((y) =>\n    y ? Math.floor(y / to) * to : undefined,\n  );\n  return <div>{scrollYFloored}</div>;\n}\n```",
      "source_content_hash": "4d300d3a281610e30302fe8d59abb4edbd06478886eb3c15309eb614caf0beb1",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "fr": "@@untranslatable_placeholder_5b2e44c7",
        "en": "@@untranslatable_placeholder_5b2e44c7",
        "zh-hans": "@@untranslatable_placeholder_5b2e44c7"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "70c65cb9",
      "source_content": "<ScrollApp />",
      "source_content_hash": "87e4dd8dae5f49eedd8ebe8eebe3f85246f0f5048d947e97cfcbac76dcc6f776",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "fr": "@@untranslatable_placeholder_70c65cb9",
        "en": "@@untranslatable_placeholder_70c65cb9",
        "zh-hans": "@@untranslatable_placeholder_70c65cb9"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "61e5dad6",
      "source_content": "Scroll the page and see how the components above re-render? One is re-rendering less than the other!",
      "source_content_hash": "98e6dd5231b50293e3baae90be4411d8ba43083ef1e6c5a14a5b049dc5cf35ce",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "fr": "Faites défiler la page et observez comment les composants ci-dessus se réaffichent ? L'un se réaffiche moins que l'autre !",
        "en": "Faites défiler la page et observez comment les composants ci-dessus se réaffichent ? L'un se réaffiche moins que l'autre !",
        "zh-hans": "滚动页面时观察上方组件的重新渲染情况？其中一个组件的渲染频率明显更低！"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "78bd731b",
      "source_content": ":::info\n\nWhen you don't need a `scrollY` 1 pixel precision level, returning a wide range value such as `scrollY` can also be considered as over-returning. Consider returning a narrower value.\n\nFor example: a `useResponsiveBreakpoint()` hook that only returns a limited set of values (`small`, `medium` or `large`) will be more optimized than a `useViewportWidth()` hook.\n\nIf a React component only handles `large` screens differently, you can create an even narrower `useIsLargeScreen()` hook returning a boolean.\n\n:::",
      "source_content_hash": "3838b8d80574d813aff3729df7de69e1712e98977d805d3271f0deef844a3ea6",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "fr": ":::info\n\nLorsque vous n'avez pas besoin d'une précision au pixel près pour `scrollY`, renvoyer une valeur à large plage comme `scrollY` peut aussi être considéré comme un retour excessif. Envisagez de renvoyer une valeur plus restreinte.\n\nPar exemple : un hook `useResponsiveBreakpoint()` qui ne renvoie qu'un ensemble limité de valeurs (`small`, `medium` ou `large`) sera plus optimisé qu'un hook `useViewportWidth()`.\n\nSi un composant React ne gère différemment que les écrans `large`, vous pouvez créer un hook encore plus ciblé `useIsLargeScreen()` renvoyant un booléen.\n\n:::",
        "en": ":::info\n\nLorsque vous n'avez pas besoin d'une précision au pixel près pour `scrollY`, renvoyer une large plage de valeurs comme `scrollY` peut également être considéré comme un retour excessif. Envisagez de renvoyer une valeur plus étroite.\n\nPar exemple : un hook `useResponsiveBreakpoint()` qui ne renvoie qu'un ensemble limité de valeurs (`small`, `medium` ou `large`) sera plus optimisé qu'un hook `useViewportWidth()`.\n\nSi un composant React ne gère que les écrans `large` différemment, vous pouvez créer un hook encore plus ciblé `useIsLargeScreen()` renvoyant un booléen.\n\n:::"
      },
      "invalid_translations": {
        "zh-hans": {
          "translation": ":::info\n\n当不需要 `scrollY` 的像素级精度时，返回宽范围值（如 `scrollY`）也可视为过度返回。建议返回更精确的取值。\n\n例如：返回有限值集（`small`/`medium`/`large`）的 `useResponsiveBreakpoint()` Hook 比返回视口宽度的 `useViewportWidth()` 更优化。\n\n若组件仅需区分 `large` 屏幕，可进一步实现仅返回布尔值的 `useIsLargeScreen()` Hook。\n\n:::",
          "reason": "Content of a non-translatable 'inlineCode' element was changed. Source: '`useResponsiveBreakpoint()`', Translation: '`small`'.",
          "timestamp": "2025-06-25T10:18:21.105247+00:00"
        }
      }
    },
    {
      "segment_id": "67dfd717",
      "source_content": "## Conclusion",
      "source_content_hash": "be031d37bb75d96ef08ca9ec5b0e83bb6f91172f60d3c31a78feae8d7dc4a0b0",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "fr": "## Conclusion",
        "en": "## Conclusion",
        "zh-hans": "## 结论"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "ba12acea",
      "source_content": "I hope this article convinced you to take a second look at `useSyncExternalStore()`. I feel this hook is currently underused in the React ecosystem, and deserves a bit more attention. There are many external data sources that you can subscribe to.",
      "source_content_hash": "1355fc1bdf09826d3a4978436b82e8fe95c93e087e30878f49eff5d02f8ede88",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "fr": "J'espère que cet article vous a convaincu de reconsidérer `useSyncExternalStore()`. Je trouve que ce hook est actuellement sous-utilisé dans l'écosystème React et mérite davantage d'attention. Il existe de nombreuses sources de données externes auxquelles vous pouvez vous abonner.",
        "en": "J'espère que cet article vous a convaincu de reconsidérer `useSyncExternalStore()`. Je pense que ce hook est actuellement sous-utilisé dans l'écosystème React et mérite plus d'attention. Il existe de nombreuses sources de données externes auxquelles vous pouvez vous abonner.",
        "zh-hans": "希望本文能让您重新审视 `useSyncExternalStore()`。该 Hook 目前在 React 生态中使用不足，值得更多关注——可订阅的外部数据源非常广泛。"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "4033c370",
      "source_content": "If you still haven't upgraded to React 18, there's a npm [use-sync-external-store](https://www.npmjs.com/package/use-sync-external-store) shim that you can already use today in older versions. There is also a `use-sync-external-store/with-selector` export in case you need to return a memoized non-primitive value.",
      "source_content_hash": "b68310ecc785b49d09f5e05131808002c23cb580be2399153172b3f21d43a2e6",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "fr": "Si vous n'avez pas encore migré vers React 18, il existe un shim npm [use-sync-external-store](https://www.npmjs.com/package/use-sync-external-store) que vous pouvez déjà utiliser dans les anciennes versions. Il existe également une exportation `use-sync-external-store/with-selector` au cas où vous auriez besoin de renvoyer une valeur mémoïsée non primitive.",
        "en": "Si vous n'êtes toujours pas passé à React 18, il existe un shim npm [use-sync-external-store](https://www.npmjs.com/package/use-sync-external-store) que vous pouvez déjà utiliser dans les anciennes versions. Il existe également une exportation `use-sync-external-store/with-selector` si vous avez besoin de renvoyer une valeur non primitive mémorisée.",
        "zh-hans": "若尚未升级至 React 18，可通过 npm [use-sync-external-store](https://www.npmjs.com/package/use-sync-external-store) 垫片在旧版本中使用。如需返回非原始值的记忆化结果，还可使用 `use-sync-external-store/with-selector` 导出。"
      },
      "invalid_translations": {}
    }
  ],
  "target_i18n_subpath": "docusaurus-plugin-content-blog-articles/useSyncExternalStore-the-underrated-react-api/index.mdx",
  "last_updated_timestamp": "2025-06-25T10:18:21.105301+00:00",
  "schema_version": "1.0",
  "translated_versions": {
    "fr": "d837303b04cde37a19a845d82af4186f11a8e3903e147c38fe77df1f4309161d",
    "en": "d837303b04cde37a19a845d82af4186f11a8e3903e147c38fe77df1f4309161d",
    "zh-hans": "d837303b04cde37a19a845d82af4186f11a8e3903e147c38fe77df1f4309161d"
  }
}